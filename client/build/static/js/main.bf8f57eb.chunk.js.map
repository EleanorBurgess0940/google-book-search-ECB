{"version":3,"sources":["components/Container/index.js","components/Row/index.js","components/Col/index.js","components/bookCard/index.js","pages/saved.js","pages/search.js","components/Navbar/index.js","components/Wrapper/index.js","components/SearchForm/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","react_default","a","createElement","Object","assign","className","concat","fluid","Row","Col","size","split","map","join","bookCard","Saved","state","search","results","booklist","this","book","title","image","author","github","about","components_Container","style","marginTop","components_Row","components_Col","Component","Search","Navbar","class","id","href","react_router_dom","to","window","location","pathname","Wrapper","SearchForm","console","log","htmlFor","value","onChange","handleInputChange","name","type","placeholder","onClick","handleFormSubmit","App","components_Navbar","components_SearchForm","components_Wrapper","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bf8f57eb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return (\r\n    <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\nfunction Row(props) {\r\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\n\r\nfunction Col(props) {\r\n  const size = props.size\r\n    .split(\" \")\r\n    .map((size) => \"col-\" + size)\r\n    .join(\" \");\r\n\r\n  return <div className={size} {...props} />;\r\n}\r\n\r\nexport default Col;\r\n","import React from \"react\";\r\n\r\nfunction bookCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img src={props.image} alt={props.title} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>{props.title}</li>\r\n          <li>{props.about}</li>\r\n          <li>{props.deployed}</li>\r\n          <li>{props.github}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default bookCard;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"../components/Container\";\r\nimport Row from \"../components/Row\";\r\nimport Col from \"../components/Col\";\r\nimport bookCard from \"../components/bookCard\";\r\n\r\nclass Saved extends Component {\r\n  state = {\r\n    search: \"\",\r\n    results: [],\r\n  };\r\n\r\n  render() {\r\n    const searchArr = this.state.results;\r\n    const booklist = searchArr.map((book) => (\r\n      <bookCard\r\n        title={book.title}\r\n        image={book.image}\r\n        author={book.author}\r\n        github={book.github}\r\n        about={book.about}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <Container style={{ marginTop: 20 }}>\r\n          <Row>\r\n            <Col size=\"md-5\">\r\n              <h1> Search Results</h1>\r\n              <h3> Happy Reading!</h3>\r\n            </Col>\r\n          </Row>\r\n          {booklist}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Saved;\r\n","import React from \"react\";\r\nimport Container from \"../components/Container\";\r\nimport Row from \"../components/Row\";\r\nimport Col from \"../components/Col\";\r\n\r\nfunction Search() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <h1>Search</h1>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav>\r\n      <div class=\"wrapper\">\r\n        <div class=\"navbar navbar-light bg-light\">\r\n          <div id=\"main-content\">\r\n            <a class=\"navbar-brand\" href=\"home.html\">\r\n              <h2>\r\n                <Link\r\n                  to=\"/\"\r\n                  className={\r\n                    window.location.pathname === \"/\" ||\r\n                    window.location.pathname === \"/\"\r\n                      ? \"nav-link active\"\r\n                      : \"nav-link\"\r\n                  }\r\n                >\r\n                  Google Books\r\n                </Link>\r\n              </h2>\r\n            </a>\r\n          </div>\r\n          <div id=\"sidebar\">\r\n            <ul class=\"navbar list-group list-group-horizontal\">\r\n              <li class=\"nav-item active\">\r\n                <Link\r\n                  to=\"/search\"\r\n                  className={\r\n                    window.location.pathname === \"/\" ||\r\n                    window.location.pathname === \"/search\"\r\n                      ? \"nav-link active\"\r\n                      : \"nav-link\"\r\n                  }\r\n                >\r\n                  Search\r\n                </Link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <Link\r\n                  to=\"/saved\"\r\n                  className={\r\n                    window.location.pathname === \"/\" ||\r\n                    window.location.pathname === \"/saved\"\r\n                      ? \"nav-link active\"\r\n                      : \"nav-link\"\r\n                  }\r\n                >\r\n                  Saved\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\" {...props} />;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\nfunction SearchForm(props) {\r\n  console.log(props);\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"search\">Search for a book:</label>\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Harry Potter\"\r\n          id=\"search\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          onClick={props.handleFormSubmit}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Saved from \"./pages/saved\";\nimport Search from \"./pages/search\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport SearchForm from \"./components/SearchForm\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <SearchForm />\n          <Wrapper>\n            <Route exact path=\"/\" component={Saved} />\n            <Route exact path=\"/save\" component={Saved} />\n            <Route exact path=\"/search\" component={Search} />\n          </Wrapper>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}